; Definitions for Liara Forth for the W65C265SXB
; Scot W. Stevenson <scot.stevenson@gmail.com>
; First version: 01. Apr 2016
; This version: 19. Feb 2017

; This file is included by liaraforth.tasm

; Note that Typist's Assembler Notation does not distinguish between 
; upper andlower case. Variations in case are for human readers only.

; I/O facilities are handled in the separate kernel files. The definitions for
; multitasking are preliminary and will probably change

; ===================================================================
; CONTROL VALUES

        ; NC_LIMIT gives the number of maximum bytes the code of a word may be
        ; long and still be compiled natively - see COMPILE, for details.
        ; A value of zero means a word is always compiled as a subroutine. 
        ; TODO Decide if we want to expose this value to the user
        .equ nc_limit 0

; ===================================================================
; MEMORY MAP (consider moving parts of these to kernel.tasm)

        .equ cp0              0300  ; start of available RAM for Dictionary
        .equ physicalram     07fff  ; end of installed RAM
        .equ maxram-single   07bff  ; end of available RAM (single task mode)
        .equ maxram-multiple 06fff  ; end of available RAM (multitask mode)
        .equ buffers  7c00   ; buffer area start

; The two input buffers are currently switched in REFILL by bit flipping. If you
; change their addresses, you'll probably have to rewrite the code there

        .equ buffersize  0ff ; maximum size for input buffers
        .equ ibuffer1   7c00 ; start of 256 byte input buffer 1
        .equ ibuffer2   7d00 ; start of 256 byte input buffer 2
        .equ padsize     0ff ; size of PAD, must be > &84
        .equ padoffset   07f ; distance from CP to PAD (holds number strings)

; RAM from 0000 to 01ff is left for the Mensch Monitor to use

        .equ directpage          0200  ; single task Direct Page (DP) start
        .equ stack-multiple      7000  ; multitask Stack (S) area start
        .equ directpage-multiple 7400  ; multitask Direct Page (DP) area start

; Initial values

        .equ stack0 7fff  ; single task Stack (S) start (bottom)
        .equ dsp0   02f8  ; initial Data Stack Pointer (X)

; ===================================================================
; DIRECT PAGE ADDRESSES

; All are one cell (two bytes) long to prevent weird errors
; TODO move these to USER variables for multitasking

        .equ cp       { directpage + &0 }  ; Compiler Pointer, 2 bytes
        .equ dp       { directpage + &2 }  ; Dictionary Pointer, 2 bytes
        .equ tmpdsp   { directpage + &4 }  ; Temporary DSP (X) storage, 2 bytes
        .equ tmptos   { directpage + &6 }  ; Temporary TOS (Y) storage, 2 bytes
        .equ output   { directpage + &8 }  ; Address where output is constructed
        .equ insrc    { directpage + &10 } ; Input Source for SOURCE-ID
        .equ cib      { directpage + &12 } ; Current Input Buffer, 7c00 or 7d00
        .equ ciblen   { directpage + &14 } ; Length of current input buffer
        .equ piblen   { directpage + &16 } ; Length of previous input buffer
        .equ toin     { directpage + &18 } ; Pointer to CIB (>IN in Forth)
        .equ state    { directpage + &20 } ; STATE: -1 compile, 0 interpret
        .equ tmp1     { directpage + &22 } ; Temporary storage
        .equ tmp2     { directpage + &24 } ; Temporary storage
        .equ tmp3     { directpage + &26 } ; Temporary storage
        .equ base     { directpage + &28 } ; Radix for number conversion
        .equ workword { directpage + &30 } ; Currently compiliing word
        .equ scratch  { directpage + &32 } ; 8 byte scratchpad (see UM/MOD)
        .equ tohold   { directpage + &40 } ; Pointer for formatted output 


; ===================================================================
; HELPER DEFINITIONS

; ASCII characters
        .equ AscCC   03  ; break (Control-C) ASCII character
        .equ AscBELL 07  ; ACSCII bell sound
        .equ AscBS   08  ; backspace ASCII character
        .equ AscLF   0a  ; line feed ASCII character
        .equ AscCR   0d  ; carriage return ASCII character
        .equ AscCN   0e  ; ASCII CNTR-n (for next command)
        .equ AscCP   10  ; ASCII CNTR-p (for previous command)
        .equ AscESC  1b  ; Escape ASCII character
        .equ AscSP   20  ; space ASCII character
        .equ AscDEL  7f  ; DEL ASCII character

; Dictionary flags. The first four are currently unused
        .equ CO 0004 ; Compile Only
        .equ IM 0002 ; Immediate Word
        .equ NC 0001 ; Native Compile allowed

