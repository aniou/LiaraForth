; Definitions for Liara Forth for the W65C265SXB
; Scot W. Stevenson <scot.stevenson@gmail.com>
; First version: 01. Apr 2016
; This version: 31. Dec 2016

; This file is included by liaraforth.tasm

; Note that Typist's Assembler Notation does not distinguish between 
; upper andlower case. Variations in case are for human readers only.

; The definitions for multitasking are preliminary and will probably 
; change

; ===================================================================
; MEMORY MAP

        .equ ram0            0200   ; start of available RAM
        .equ physicalram     07fff  ; end of installed RAM
        .equ maxram-single   07bff  ; end of available RAM (single task mode)
        .equ maxram-multiple 06fff  ; end of available RAM (multitask mode)
        .equ buffers  7c00   ; buffer area start

; The two input buffers are currently switched in REFILL by bit flipping. If you
; change their addresses, you'll probably have to rewrite the code there

        .equ buffersize 00ff ; maximum size for input buffers
        .equ ibuffer1   7c00 ; start of 256 byte input buffer 1
        .equ ibuffer2   7d00 ; start of 256 byte input buffer 2

; RAM from 0000 to 01ff is left for the Mensch Monitor to use

        .equ directpage          0200  ; single task Direct Page (DP) start
        .equ stack-multiple      7000  ; multitask Stack (S) area start
        .equ directpage-multiple 7400  ; multitask Direct Page (DP) area start

; Initial values

        .equ stack0 7fff  ; single task Stack (S) start (bottom)
        .equ dsp0   02f0  ; initial Data Stack Pointer (X)

; ===================================================================
; DIRECT PAGE ADDRESSES

; All are one cell (two bytes) long to prevent weird errors

        .equ cp      { directpage + &0 }  ; Compiler Pointer, 2 bytes
        .equ dp      { directpage + &2 }  ; Dictionary Pointer, 2 bytes
        .equ tmpdsp  { directpage + &4 }  ; Temporary DSP (X) storage, 2 bytes
        .equ tmptos  { directpage + &6 }  ; Temporary TOS (Y) storage, 2 bytes
;       .equ         { directpage + &8 }  ; 
        .equ insrc   { directpage + &10 } ; Input Source for SOURCE-ID
        .equ cib     { directpage + &12 } ; Current Input Buffer, 7c00 or 7d00
        .equ ciblen  { directpage + &14 } ; Length of current input buffer
        .equ piblen  { directpage + &16 } ; Length of previous input buffer
        .equ toin    { directpage + &18 } ; Pointer to CIB (>IN in Forth)
        .equ state   { directpage + &20 } ; STATE: 1 compile, 0 interpret
        .equ tmp1    { directpage + &22 } ; Temporary storage, usually address
        .equ tmp2    { directpage + &22 } ; Temporary storage, usually counter

; ===================================================================
; MENSCH MONITOR ROUTINE LOCATIONS

; These must be accessed by long subroutine jumps (jsr.l)
; See https://github.com/scotws/265SXB-Guide/blob/master/monitor.md
; Liara Forth only uses two of the built-in routines to make porting the code to
; other systems easier.

        .equ GET_CHR 0e036  ; Get character: Returns ASCII in A8. Blocks.
        .equ PUT_CHR 0e04b  ; Put character: ASCII of character -> A8


; ===================================================================
; HELPER DEFINITIONS

; ASCII character set

        .equ AscCC  03  ; break (Control-C) ASCII character
        .equ AscBS  08  ; backspace ASCII character
        .equ AscLF  0A  ; line feed ASCII character
        .equ AscCR  0D  ; carriage return ASCII character
        .equ AscESC 1B  ; Escape ASCII character
        .equ AscSP  20  ; space ASCII character
        .equ AscDEL 7F  ; DEL ASCII character

; Dictionary flags

        .equ PW %10000000  ; Primitive (Native) Word
        .equ CO %01000000  ; Compile Only
        .equ IM %00100000  ; Immediate Word
        .equ NC %00010000  ; Native (inline) Compile

